WebService原理

XML,SOAP和WSDL(Web Services Description Language)就是构成WebService平台的三大技术

WebService采用Http协议来在客户端和服务端之间传输数据。WebService使用XML来封装数据，XML主要的优点在于它是跨平台的。

WebService通过HTTP协议发送请求和接收结果时，发送的请求内容和结果内容都采用XML格式封装，并增加了一些特定的HTTP消息头，
以说明HTTP消息的内容格式，这些特定的HTTP消息头和XML内容格式就是SOAP协议规定的。

WebService服务器端首先要通过一个WSDL文件来说明自己有什么服务可以对外调用。简单的说，WSDL就像是一个说明书，
用于描述WebService及其方法、参数和返回值。 WSDL文件保存在Web服务器上，通过一个url地址就可以访问到它。
客户端要调用一个WebService服务之前，要知道该服务的WSDL文件的地址。
WebService服务提供商可以通过两种方式来暴露它的WSDL文件地址：1.注册到UDDI服务器，以便被人查找；2.直接告诉给客户端调用者。

WebService交互的过程就是,WebService遵循SOAP协议通过XML封装数据，然后由Http协议来传输数据。
SOAP=http+xml

WSDL文档应该从下往上阅读。

1.先看service标签，看相应port的binding属性，然后通过值查找上面的binding标签。

2.通过binding标签可以获得具体协议等信息，然后查看binding的type属性

3.通过binding的type属性，查找对应的portType，可以获得可操作的方法和参数、返回值等。

4.通过portType下的operation标签的message属性，可以向上查找message获取具体的数据参数信息


WebService的注解都位于javax.jws包下:
@WebService-定义服务，在类上边
    targetNamespace：指定命名空间
    name：portType的名称
    portName：port的名称
    serviceName：服务名称
    endpointInterface：SEI接口地址，如果一个服务类实现了多个接口，只需要发布一个接口的方法，可通过此注解指定要发布服务的接口。

@WebMethod-定义方法，在公开方法上边
    operationName：方法名
    exclude：设置为true表示此方法不是webservice方法，反之则表示webservice方法，默认是false

@WebResult-定义返回值，在方法返回值前边
    name：返回结果值的名称

@WebParam-定义参数，在方法参数前边
    name：指定参数的名称